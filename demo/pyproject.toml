[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "example"
dynamic = ["version"]
description = ''
readme = "README.md"
requires-python = ">=3.12"
license = "MIT"
keywords = []
authors = [
  { name = "Fabian Tsirogiannis", email = "fabian.tsirogiannis@imbus.de" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = ["robotframework", "robotframework-browser", "robotcode[ALL]"]

[project.urls]
Documentation = "https://github.com/febb0e/rbcn25-mastering-robotcode/blob/main/README.md"
Issues = "https://github.com/febb0e/rbcn25-mastering-robotcode/issues"
Source = "https://github.com/febb0e/rbcn25-mastering-robotcode"

[tool.hatch.version]
path = "src/example/__about__.py"

[tool.hatch.envs.types]
extra-dependencies = [
  "mypy>=1.0.0",
]
[tool.hatch.envs.types.scripts]
check-mypy = "mypy --install-types --non-interactive {args:src/example tests}"
check-robotidy = "robotidy --check {args: .}"
check-robocop = "robocop {args: .}"
check = ["check-mypy", "check-robotidy", "check-robocop"]

[tool.hatch.build.targets.wheel]
packages = ["src/example"]

[tool.hatch.envs.default]
dependencies = ["robotframework-tidy", "robotframework-robocop"]
post-install-commands = [
  "rfbrowser init",
  "npm install pm2@latest -g",
  "cd todo-app && npm install"
]

[tool.hatch.envs.default.scripts]
robot = "hatch run robotcode -p default robot {args:tests}"
robot-ci = "hatch run robotcode -p ci robot --outputdir=reports {args:tests}"
init-something = "hatch run scripts/init-something.py"
run-tests = ["init-something", "start-server", "robot"]
run-tests-ci = ["start-webapps", "robot-ci", "stop-webapps"]
pm2-status = ["hatch run pm2 status"]
start-todo-app-test = ['hatch run pm2 start "VITE_ENVIRONMENT=Test npm run dev --prefix todo-app" --name Test']
start-todo-app-dev = ['hatch run pm2 start "VITE_ENVIRONMENT=Development npm run dev --prefix todo-app" --name Dev']
start-webapps = ["start-todo-app-test", "start-todo-app-dev"]
stop-webapps = ["hatch run pm2 delete all", "pm2 status"]